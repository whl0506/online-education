<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guli.edu.mapper.EduTeacherMapper" >
    <resultMap id="BaseResultMap" type="com.guli.edu.entity.EduTeacher" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="intro" property="intro" jdbcType="VARCHAR" />
        <result column="level" property="level" jdbcType="INTEGER" />
        <result column="avatar" property="avatar" jdbcType="VARCHAR" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.guli.edu.entity.EduTeacher" extends="BaseResultMap" >
        <result column="career" property="career" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
    id, name, intro, level, avatar, sort, is_deleted, gmt_create, gmt_modified
  </sql>
    <sql id="Blob_Column_List" >
    career
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.guli.edu.entity.EduTeacherExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from edu_teacher
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guli.edu.entity.EduTeacherExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from edu_teacher
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from edu_teacher
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from edu_teacher
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.guli.edu.entity.EduTeacherExample" >
        delete from edu_teacher
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.guli.edu.entity.EduTeacher" >
    insert into edu_teacher (id, name, intro,
      level, avatar, sort,
      is_deleted, gmt_create, gmt_modified,
      career)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR},
      #{level,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER},
      #{isDeleted,jdbcType=BIT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP},
      #{career,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.guli.edu.entity.EduTeacher" >
        insert into edu_teacher
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="intro != null" >
                intro,
            </if>
            <if test="level != null" >
                level,
            </if>
            <if test="avatar != null" >
                avatar,
            </if>
            <if test="sort != null" >
                sort,
            </if>
            <if test="isDeleted != null" >
                is_deleted,
            </if>
            <if test="gmtCreate != null" >
                gmt_create,
            </if>
            <if test="gmtModified != null" >
                gmt_modified,
            </if>
            <if test="career != null" >
                career,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="intro != null" >
                #{intro,jdbcType=VARCHAR},
            </if>
            <if test="level != null" >
                #{level,jdbcType=INTEGER},
            </if>
            <if test="avatar != null" >
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="sort != null" >
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null" >
                #{isDeleted,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null" >
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null" >
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="career != null" >
                #{career,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.guli.edu.entity.EduTeacherExample" resultType="java.lang.Integer" >
        select count(*) from edu_teacher
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update edu_teacher
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.intro != null" >
                intro = #{record.intro,jdbcType=VARCHAR},
            </if>
            <if test="record.level != null" >
                level = #{record.level,jdbcType=INTEGER},
            </if>
            <if test="record.avatar != null" >
                avatar = #{record.avatar,jdbcType=VARCHAR},
            </if>
            <if test="record.sort != null" >
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.isDeleted != null" >
                is_deleted = #{record.isDeleted,jdbcType=BIT},
            </if>
            <if test="record.gmtCreate != null" >
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null" >
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.career != null" >
                career = #{record.career,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map" >
        update edu_teacher
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        intro = #{record.intro,jdbcType=VARCHAR},
        level = #{record.level,jdbcType=INTEGER},
        avatar = #{record.avatar,jdbcType=VARCHAR},
        sort = #{record.sort,jdbcType=INTEGER},
        is_deleted = #{record.isDeleted,jdbcType=BIT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        career = #{record.career,jdbcType=LONGVARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update edu_teacher
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        intro = #{record.intro,jdbcType=VARCHAR},
        level = #{record.level,jdbcType=INTEGER},
        avatar = #{record.avatar,jdbcType=VARCHAR},
        sort = #{record.sort,jdbcType=INTEGER},
        is_deleted = #{record.isDeleted,jdbcType=BIT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.guli.edu.entity.EduTeacher" >
        update edu_teacher
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="intro != null" >
                intro = #{intro,jdbcType=VARCHAR},
            </if>
            <if test="level != null" >
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="avatar != null" >
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="sort != null" >
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="isDeleted != null" >
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null" >
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null" >
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="career != null" >
                career = #{career,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.guli.edu.entity.EduTeacher" >
    update edu_teacher
    set name = #{name,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=BIT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      career = #{career,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.guli.edu.entity.EduTeacher" >
    update edu_teacher
    set name = #{name,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=BIT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>